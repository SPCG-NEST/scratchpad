{"$message_type":"diagnostic","message":"unresolved import `ark_serialize`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":96,"byte_end":109,"line_start":3,"line_end":3,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use ark_serialize::CanonicalDeserialize;","highlight_start":5,"highlight_end":18}],"label":"use of undeclared crate or module `ark_serialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `ark_serialize`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mpackages/zk/simple_verifier/programs/simple_verifier/src/lib.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse ark_serialize::CanonicalDeserialize;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `ark_serialize`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find trait `FromBytes` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":689,"byte_end":698,"line_start":23,"line_end":23,"column_start":20,"column_end":29,"is_primary":true,"text":[{"text":"            <G1 as FromBytes>::read(&*[&change_endianness(&proof[0..64])[..], &[0u8][..]].concat())","highlight_start":20,"highlight_end":29}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `FromBytes` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mpackages/zk/simple_verifier/programs/simple_verifier/src/lib.rs:23:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            <G1 as FromBytes>::read(&*[&change_endianness(&proof[0..64])[..], &[0u8][..]].concat())\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `custom-heap`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.18.26/src/entrypoint.rs","byte_start":6087,"byte_end":6110,"line_start":164,"line_end":164,"column_start":23,"column_end":46,"is_primary":true,"text":[{"text":"        #[cfg(all(not(feature = \"custom-heap\"), target_os = \"solana\"))]","highlight_start":23,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.18.26/src/entrypoint.rs","byte_start":5100,"byte_end":5130,"line_start":137,"line_end":137,"column_start":9,"column_end":39,"is_primary":false,"text":[{"text":"        $crate::custom_heap_default!();","highlight_start":9,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11,"is_primary":false,"text":[{"text":"#[program]","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11,"is_primary":false,"text":[{"text":"#[program]","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anchor-attribute-program-0.30.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"anchor_lang::solana_program::entrypoint!","def_site_span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.18.26/src/entrypoint.rs","byte_start":4584,"byte_end":4607,"line_start":125,"line_end":125,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! entrypoint {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::custom_heap_default!","def_site_span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.18.26/src/entrypoint.rs","byte_start":6018,"byte_end":6050,"line_start":162,"line_end":162,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"macro_rules! custom_heap_default {","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `custom-heap` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `custom-heap`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mpackages/zk/simple_verifier/programs/simple_verifier/src/lib.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[program]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `custom-heap` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::custom_heap_default` which comes from the expansion of the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `solana`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.18.26/src/entrypoint.rs","byte_start":6113,"byte_end":6133,"line_start":164,"line_end":164,"column_start":49,"column_end":69,"is_primary":true,"text":[{"text":"        #[cfg(all(not(feature = \"custom-heap\"), target_os = \"solana\"))]","highlight_start":49,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.18.26/src/entrypoint.rs","byte_start":5100,"byte_end":5130,"line_start":137,"line_end":137,"column_start":9,"column_end":39,"is_primary":false,"text":[{"text":"        $crate::custom_heap_default!();","highlight_start":9,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11,"is_primary":false,"text":[{"text":"#[program]","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11,"is_primary":false,"text":[{"text":"#[program]","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anchor-attribute-program-0.30.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"anchor_lang::solana_program::entrypoint!","def_site_span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.18.26/src/entrypoint.rs","byte_start":4584,"byte_end":4607,"line_start":125,"line_end":125,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! entrypoint {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::custom_heap_default!","def_site_span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.18.26/src/entrypoint.rs","byte_start":6018,"byte_end":6050,"line_start":162,"line_end":162,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"macro_rules! custom_heap_default {","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `target_os` are: `aix`, `android`, `cuda`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, `uefi`, `unknown`, `visionos`, and `vita` and 6 more","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `solana`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mpackages/zk/simple_verifier/programs/simple_verifier/src/lib.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[program]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `target_os` are: `aix`, `android`, `cuda`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, `uefi`, `unknown`, `visionos`, and `vita` and 6 more\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::custom_heap_default` which comes from the expansion of the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `custom-panic`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.18.26/src/entrypoint.rs","byte_start":8258,"byte_end":8282,"line_start":220,"line_end":220,"column_start":23,"column_end":47,"is_primary":true,"text":[{"text":"        #[cfg(all(not(feature = \"custom-panic\"), target_os = \"solana\"))]","highlight_start":23,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.18.26/src/entrypoint.rs","byte_start":5140,"byte_end":5171,"line_start":138,"line_end":138,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        $crate::custom_panic_default!();","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11,"is_primary":false,"text":[{"text":"#[program]","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11,"is_primary":false,"text":[{"text":"#[program]","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anchor-attribute-program-0.30.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"anchor_lang::solana_program::entrypoint!","def_site_span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.18.26/src/entrypoint.rs","byte_start":4584,"byte_end":4607,"line_start":125,"line_end":125,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! entrypoint {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::custom_panic_default!","def_site_span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.18.26/src/entrypoint.rs","byte_start":8188,"byte_end":8221,"line_start":218,"line_end":218,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! custom_panic_default {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `custom-panic` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `custom-panic`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mpackages/zk/simple_verifier/programs/simple_verifier/src/lib.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[program]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `custom-panic` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::custom_panic_default` which comes from the expansion of the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `solana`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.18.26/src/entrypoint.rs","byte_start":8285,"byte_end":8305,"line_start":220,"line_end":220,"column_start":50,"column_end":70,"is_primary":true,"text":[{"text":"        #[cfg(all(not(feature = \"custom-panic\"), target_os = \"solana\"))]","highlight_start":50,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.18.26/src/entrypoint.rs","byte_start":5140,"byte_end":5171,"line_start":138,"line_end":138,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        $crate::custom_panic_default!();","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11,"is_primary":false,"text":[{"text":"#[program]","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11,"is_primary":false,"text":[{"text":"#[program]","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anchor-attribute-program-0.30.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"anchor_lang::solana_program::entrypoint!","def_site_span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.18.26/src/entrypoint.rs","byte_start":4584,"byte_end":4607,"line_start":125,"line_end":125,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! entrypoint {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::custom_panic_default!","def_site_span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.18.26/src/entrypoint.rs","byte_start":8188,"byte_end":8221,"line_start":218,"line_end":218,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! custom_panic_default {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `target_os` are: `aix`, `android`, `cuda`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, `uefi`, `unknown`, `visionos`, and `vita` and 6 more","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `solana`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mpackages/zk/simple_verifier/programs/simple_verifier/src/lib.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[program]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `target_os` are: `aix`, `android`, `cuda`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, `uefi`, `unknown`, `visionos`, and `vita` and 6 more\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::custom_panic_default` which comes from the expansion of the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `solana_program`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":30,"byte_end":44,"line_start":1,"line_end":1,"column_start":31,"column_end":45,"is_primary":true,"text":[{"text":"use anchor_lang::{prelude::*, solana_program};","highlight_start":31,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":28,"byte_end":44,"line_start":1,"line_end":1,"column_start":29,"column_end":45,"is_primary":true,"text":[{"text":"use anchor_lang::{prelude::*, solana_program};","highlight_start":29,"highlight_end":45}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":17,"byte_end":18,"line_start":1,"line_end":1,"column_start":18,"column_end":19,"is_primary":true,"text":[{"text":"use anchor_lang::{prelude::*, solana_program};","highlight_start":18,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":44,"byte_end":45,"line_start":1,"line_end":1,"column_start":45,"column_end":46,"is_primary":true,"text":[{"text":"use anchor_lang::{prelude::*, solana_program};","highlight_start":45,"highlight_end":46}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `solana_program`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mpackages/zk/simple_verifier/programs/simple_verifier/src/lib.rs:1:31\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse anchor_lang::{prelude::*, solana_program};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `g1::G1Affine` and `g2::G2Affine`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":63,"byte_end":75,"line_start":2,"line_end":2,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"use ark_bn254::{g1::G1Affine, g2::G2Affine};","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":77,"byte_end":89,"line_start":2,"line_end":2,"column_start":31,"column_end":43,"is_primary":true,"text":[{"text":"use ark_bn254::{g1::G1Affine, g2::G2Affine};","highlight_start":31,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":47,"byte_end":92,"line_start":2,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use ark_bn254::{g1::G1Affine, g2::G2Affine};","highlight_start":1,"highlight_end":45},{"text":"use ark_serialize::CanonicalDeserialize;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `g1::G1Affine` and `g2::G2Affine`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mpackages/zk/simple_verifier/programs/simple_verifier/src/lib.rs:2:17\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse ark_bn254::{g1::G1Affine, g2::G2Affine};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11,"is_primary":true,"text":[{"text":"#[program]","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11,"is_primary":false,"text":[{"text":"#[program]","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anchor-attribute-program-0.30.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `anchor-debug` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mpackages/zk/simple_verifier/programs/simple_verifier/src/lib.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[program]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `anchor-debug` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11,"is_primary":true,"text":[{"text":"#[program]","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11,"is_primary":false,"text":[{"text":"#[program]","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anchor-derive-accounts-0.30.1/src/lib.rs","byte_start":29061,"byte_end":29117,"line_start":631,"line_end":631,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `anchor-debug` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mpackages/zk/simple_verifier/programs/simple_verifier/src/lib.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[program]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `anchor-debug` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11,"is_primary":true,"text":[{"text":"#[program]","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11,"is_primary":false,"text":[{"text":"#[program]","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anchor-derive-accounts-0.30.1/src/lib.rs","byte_start":29061,"byte_end":29117,"line_start":631,"line_end":631,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `anchor-debug` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mpackages/zk/simple_verifier/programs/simple_verifier/src/lib.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[program]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `anchor-debug` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11,"is_primary":true,"text":[{"text":"#[program]","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11,"is_primary":false,"text":[{"text":"#[program]","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anchor-derive-accounts-0.30.1/src/lib.rs","byte_start":29061,"byte_end":29117,"line_start":631,"line_end":631,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `anchor-debug` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mpackages/zk/simple_verifier/programs/simple_verifier/src/lib.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[program]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `anchor-debug` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11,"is_primary":true,"text":[{"text":"#[program]","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11,"is_primary":false,"text":[{"text":"#[program]","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anchor-derive-accounts-0.30.1/src/lib.rs","byte_start":29061,"byte_end":29117,"line_start":631,"line_end":631,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `anchor-debug` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mpackages/zk/simple_verifier/programs/simple_verifier/src/lib.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[program]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `anchor-debug` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11,"is_primary":true,"text":[{"text":"#[program]","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11,"is_primary":false,"text":[{"text":"#[program]","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anchor-derive-accounts-0.30.1/src/lib.rs","byte_start":29061,"byte_end":29117,"line_start":631,"line_end":631,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `anchor-debug` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mpackages/zk/simple_verifier/programs/simple_verifier/src/lib.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[program]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `anchor-debug` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11,"is_primary":true,"text":[{"text":"#[program]","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"packages/zk/simple_verifier/programs/simple_verifier/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11,"is_primary":false,"text":[{"text":"#[program]","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/spacemandev/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anchor-derive-accounts-0.30.1/src/lib.rs","byte_start":29061,"byte_end":29117,"line_start":631,"line_end":631,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `anchor-debug` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mpackages/zk/simple_verifier/programs/simple_verifier/src/lib.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[program]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `anchor-debug` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 2 previous errors; 13 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 2 previous errors; 13 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0405, E0432.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0405, E0432.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0405`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0405`.\u001b[0m\n"}
